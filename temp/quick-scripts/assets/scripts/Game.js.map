{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","scoreDisplay","Label","maxStarDuration","minStarDuration","ground","Node","player","scoreAudio","url","AudioClip","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","gainScore","string","toString","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","random0To1","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","update","dt","gameOver","audioEngine","playEffect","stopAllActions","director","loadScene"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH;AACIC,aAASF,GAAGG,SADhB;;AAGIC,gBAAY;AACL;AACAC,oBAAY;AACXC,qBAAS,IADE;AAEXC,kBAAMP,GAAGQ,MAFE;AAGXC,0BAAc;AACVH,yBAAS,IADC;AAEVC,sBAAMP,GAAGU;AAFC;;AAHH,SAFP;AAWR;AACAC,yBAAiB,CAZT;AAaRC,yBAAiB,CAbT;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGc;AAFL,SAfA;AAmBR;AACAC,gBAAQ;AACJT,qBAAS,IADL;AAEJC,kBAAMP,GAAGc;AAFL,SApBA;AAwBRL,sBAAc;AACVH,qBAAS,IADC;AAEVC,kBAAMP,GAAGU;AAFC,SAxBN;;AA6BP;AACAM,oBAAY;AACTV,qBAAS,IADA;AAETW,iBAAKjB,GAAGkB;AAFC;AA9BL,KAHhB;;AAwCIC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKP,MAAL,CAAYQ,CAAZ,GAAgB,KAAKR,MAAL,CAAYS,MAAZ,GAAmB,CAAlD;AACC;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACD;AACA,aAAKC,YAAL;AACF;AACE,aAAKC,KAAL,GAAa,CAAb;AACH,KAlDL;;AAoDIC,eAAW,qBAAY;AACnB,aAAKD,KAAL,IAAc,CAAd;AACA;AACA,aAAKjB,YAAL,CAAkBmB,MAAlB,GAA2B,YAAY,KAAKF,KAAL,CAAWG,QAAX,EAAvC;AAEH,KAzDL;;AA2DIJ,kBAAc,wBAAW;AACrB;AACA,YAAIK,UAAU9B,GAAG+B,WAAH,CAAe,KAAK1B,UAApB,CAAd;AACA;AACA,aAAK2B,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACI;AACJ;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACD;AACC,aAAKb,YAAL,GAAoB,KAAKZ,eAAL,GAAuBZ,GAAGsC,UAAH,MAAmB,KAAK3B,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,aAAKW,KAAL,GAAa,CAAb;AACH,KAxEL;;AA0EIY,wBAAoB,8BAAY;AAC5B,YAAII,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKpB,OAAL,GAAepB,GAAGsC,UAAH,KAAkB,KAAKvB,MAAL,CAAYqB,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAJ,gBAAQvC,GAAG4C,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAO1C,GAAG6C,CAAH,CAAKN,KAAL,EAAYC,KAAZ,CAAP;AACH,KAnFL;;AAqFIM,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA;AACA,YAAI,KAAKxB,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,iBAAKwB,QAAL;AACA;AACH;AACD,aAAKzB,KAAL,IAAcwB,EAAd;AACH;AA7FL,2CA8Fe,qBAAY;AACnB,SAAKrB,KAAL,IAAc,CAAd;AACA;AACA,SAAKjB,YAAL,CAAkBmB,MAAlB,GAA2B,YAAY,KAAKF,KAAL,CAAWG,QAAX,EAAvC;AACA;AACA7B,OAAGiD,WAAH,CAAeC,UAAf,CAA0B,KAAKlC,UAA/B,EAA2C,KAA3C;AACH,CApGL,0CAqGc,oBAAY;AAClB,SAAKD,MAAL,CAAYoC,cAAZ,GADkB,CACY;AAC9BnD,OAAGoD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH,CAxGL","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n           // 这个属性引用了星星预制资源\r\n           starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab,\r\n            scoreDisplay: {\r\n                default: null,\r\n                type: cc.Label\r\n            }\r\n            \r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n       \r\n         // 得分音效资源\r\n         scoreAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\r\n    },\r\n    \r\n    \r\n    onLoad: function () {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n         // 初始化计时器\r\n         this.timer = 0;\r\n         this.starDuration = 0;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n      // 初始化计分\r\n        this.score = 0;\r\n    },\r\n    \r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n       \r\n    },\r\n\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n            // ...\r\n        // 将 Game 组件的实例传入星星组件\r\n        newStar.getComponent('Star').game = this;\r\n       // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // 返回星星坐标\r\n        return cc.p(randX, randY);\r\n    },\r\n   \r\n    update: function (dt) {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    }\r\n});\r\n"]}